<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">


	<context:component-scan
		base-package="com.springbook.biz" />

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- DataSource 설정 -->
	<!-- database.properties파일로 계정 정보를 빼서 관리할 수 있다. -->
	<context:property-placeholder
		location="classpath:config/database.properties" />

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	

	<!-- Transaction 설정 -->
	<!-- 스프링에서도 EJB와 마찬가지로 *트랜잭션 처리를 컨테이너가 자동으로 처리하도록 설정 할 수 있다. 
		트랜젝션 관련 네임스페이스 applicationContext.xml에 tx 네임스페이스를 추가한다.
		*연속적인 작업으로 구성되는 정보처리 스프링 트랜잭션 
		
		설정에는 xml 기반의 AOP가 사용되지만 다른점이있다. 
		1.어노테이션을 사용할 수 없다. 
		2.<aop:aspect>가 아닌 <aop:advice>가 사용된다.  -->
		
		
	<!-- 트랜젝션 관리자는 트랜잭션관리에 필요한 commit, rolback메소드를 가지고 있다. -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 트랜잭션 관리기능의 어드바이스는 <tx:advice> 엘리먼트를 이용한다.
	스프링 컨테이너가 <tx:advice>를 참조하여 자동으로 어드바이스 클래스를 생성한다. -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
		<!-- <tx:method>로 트랜젝션을 적용할 메소드를 지정할 수 있다. -->
		<!-- get으로 시작하는 모든 메소드는 read-only="true" 읽기 전용으로 처리되어 트랜잭션 관리대상에서 제외하고 나머지는 트랜잭션 관리에 포함. -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="txPointcut"
			expression="execution(* com.springbook.biz..*(..))" />

		<aop:advisor pointcut-ref="txPointcut"
			advice-ref="txAdvice" />
	</aop:config>


</beans>
