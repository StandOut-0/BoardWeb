<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- 스프링은 애너테이션 기반 설정을 제공함으로써 과도한 xml 설정으로 인한 문제를 해결한다. MVC도 스프링 설정 파일에 
		HandlerMapping, Controller, ViewResolver 같은 여러 클래스를 등록해함으로 애너테이션 설정을 최대한 
		활용하여 xml 설정을 최소화한다. -->
	<!-- 네임스페이스에 context를 추가하고 설정들을 context:component-scan로 대체한다. -->
	<context:component-scan
		base-package="com.springbook.view"></context:component-scan>

	<!-- 파일 업로드 설정 -->
	<!-- CommonsMultipartResolver는 이름이 정해져있다. 
	특정이름으로 등록된 CommonsMultipartResolver 객체만 인식하도록 프로그램 되어있다. 
	반드시 아이디값은 multipartResolver로 사용하자.
	더불어 이후 스프링 설정파일에 등록되는 클래스 중 이름이 Resolver로 끝나는 클래스들은 대부분 아이디가 정해져있다.-->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000" />
	</bean>
	
	<!-- MVC네임스페이스 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
</beans>
